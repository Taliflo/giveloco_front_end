/* =======================================================================
	Custom Mixins
======================================================================= */
.text-outline (@color: #333) { /* Text Outline */
  text-shadow: 0px 0px 0 @color,
      -1px -1px 0 @color,  
       1px -1px 0 @color,
      -1px 1px 0 @color,
       1px 1px 0 @color;
}

.box-shadow (@properties: 0 0 8px, @color: #ccc) {
  -webkit-box-shadow: @properties @color;
  -moz-box-shadow: @properties @color;
  box-shadow: @properties @color;
}

.opacity (@opacity: 50) {
  /* IE 8 */
  -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=50)";
  /* IE 5-7 */
  filter: alpha(opacity=@opacity);
  /* Netscape */
  -moz-opacity: (@opacity / 100);
  /* Safari 1.x */
  -khtml-opacity: (@opacity / 100);
  /* Good browsers */
  opacity: (@opacity / 100);
}

.icons(@font-size: 14px, @top-margin:0px) {
  display: block;
  font-size: @font-size;
  height: @font-size;
  float: left;
  position: relative;
  top: @top-margin;
}

/* Custom display for Radio Buttons and Checkboxes */
.custom-input(@height: 16px, @width: 16px, @bottom: 2px) {
  input[type=radio],
  input[type=checkbox] {  
    display: none;  
  }

  label {
    position: relative;
    padding-left: 20px;
  }

  label:before {
    font-family: 'Taliflo';
    content: "";  
    display: inline-block;  
  
    width: @width;  
    height: @height;  
  
    margin-right: 10px;  
    position: absolute;  
    left: 0;  
    bottom: @bottom;  
    background-color: @brand-teal;  
    box-shadow: inset 0px 2px 3px 0px rgba(0, 0, 0, .3), 0px 1px 0px 0px rgba(255, 255, 255, .8);
  }

  &.radio-button {
    label:before {  
      border-radius: 100%;  
    } 
  }

  &.checkbox {
    label:before {  
      border-radius: 3px;  
    }
  }

  input[type=radio]:checked + label:before { 
    content: "\e024";  
    color: #fff;  
    font-size: 10px;  
    text-align: center;  
    line-height: 16px;  
  }

  input[type=checkbox]:checked + label:before {  
    content: "\e077";  
    text-shadow: 1px 1px 1px rgba(0, 0, 0, .2);  
    font-size: 13px;  
    color: #fff;  
    text-align: center;  
    line-height: 15px;  
  }
}

/* Custom Traingular Pointers for UI elements */
.arrow {
  content: ' ';
  height: 0;
  width: 0;
  border: 16px solid transparent;
  z-index:2;
  position: absolute;

  &.up {
    &:extend(.arrow);
    bottom: 100%;
    left: 0px;
    border-bottom-color: #fff;
  }
  &.right {
    &:extend(.arrow);
    top: 0px;
    left: 100%;
    border-left-color: #fff;
  }
  &.left {
    &:extend(.arrow);
    top: 0px;
    right: 100%;
    border-right-color: #fff;
  }
  &.down {
    &:extend(.arrow);
    top: 100%;
    left: 0px;
    border-top-color: #fff;
  }
}

.transition(@property: all, @duration: 0.3s, @function: ease-in-out, @delay: 0s) {
  -webkit-transition: @property @duration @function @delay;
  -moz-transition: @property @duration @function @delay;
  -o-transition: @property @duration @function @delay;
  transition: @property @duration @function @delay;
}

.animation(@name, @duration: 0.5s, @timing-function, @delay, @iteration, @direction) {
  -webkit-animation: @name @duration @timing-function @delay @iteration @direction;
  -moz-animation: @name @duration @timing-function @delay @iteration @direction;
  -o-animation: @name @duration @timing-function @delay @iteration @direction;
  animation: @name @duration @timing-function @delay @iteration @direction;
}

.customAnimated(@duration: 0.5s, @delay: 0s, @iteration: 1) {
  -webkit-animation-duration: @duration;
  -webkit-animation-delay: @delay;
  -webkit-animation-iteration-count: @iteration;
  -moz-animation-duration: @duration;
  -moz-animation-delay: @delay;
  -moz-animation-iteration-count: @iteration;
  -o-animation-duration: @duration;
  -o-animation-delay: @delay;
  -o-animation-iteration-count: @iteration;
  animation-duration: @duration;
  animation-delay: @delay;
  animation-iteration-count: @iteration;
}

/* Stagger loading for ng-repeated elements */
.staggerAnimation(@topBefore: inherit, @rightBefore: inherit, @bottomBefore: inherit, @leftBefore: inherit, @transSpeed: 0.2s, @transDelay: 0.1s, @transDuration: 0) {
  /* Staggered Loading Animations */
  -webkit-transition: @transSpeed ease-in-out all;
  transition: @transSpeed ease-in-out all;
  position: relative;
  top: 0px;
  &.ng-enter,
  &.ng-move,
  &.ng-leave.ng-leave-active {
      opacity: 0;
      top:@topBefore;
      right: rightBefore;
      bottom: @bottomBefore;
      left: @leftBefore;
  }
  &.ng-enter-stagger,
  &.ng-move-stagger,
  &.ng-leave.ng-leave-stagger {
      -webkit-transition-delay: @transDelay;
      transition-delay: @transDelay;

      -webkit-transition-duration: @transDuration;
      transition-duration: @transDuration;
  }
  &.ng-enter.ng-enter-active,
  &.ng-move.ng-move-active,
  &.ng-leave {
      opacity: 1;
      top:0;
  }
}